input {
  jdbc{
    jdbc_driver_library => "/usr/share/logstash/drivers/mysql-connector-j-9.3.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://host.docker.internal:3306/ani4h"
    jdbc_user => "admin"
    jdbc_password => "70RB6g0gVtWLuKGO"
    use_column_value => true
    tracking_column => "updated_at"
    schedule => "* * * * *"
    statement => "
        SELECT
            f.id AS id,
            f.id AS idSort,
            f.title AS title,
            f.synopsis AS synopsis,
            f.avg_star AS avgStar,
            f.total_star AS totalStar,
            f.max_episodes AS maxEpisodes,
            f.num_episodes AS numEpisodes,
            f.year AS year,
            f.season AS season,
            f.state AS state,
            f.images AS images,
            a.synonyms AS synonyms,
            a.ja_name AS jaName,
            a.en_name AS enName,
            (
                SELECT
                    JSON_ARRAYAGG(JSON_OBJECT('id', g.id, 'name', g.name))
                FROM genres g
                JOIN film_genres fg ON g.id = fg.genre_id
                WHERE fg.film_id = f.id
            ) AS genres,
            f.updated_at AS updated_at
        FROM films f
        LEFT JOIN alternative_titles a ON f.id = a.film_id
        WHERE f.updated_at > :sql_last_value
    "
  }
}

filter {
    json {
        source => "images"
        target => "images"
    }
    mutate {
        remove_field => ["updated_at", "@version", "@timestamp"]
    }
}

output {
    elasticsearch {
        hosts => ["https://host.docker.internal:9200"]
        index => "films"
        document_id => "%{id}"
        ssl => true
        ssl_certificate_verification => false
        user => "admin"
        password => "CLbpnYcGY2LMwHrQ"
    }
    stdout { codec => rubydebug }
}